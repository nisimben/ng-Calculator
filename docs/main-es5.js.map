{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/comps/calculator/calculator.component.ts","webpack:///src/app/comps/calculator/calculator.component.html","webpack:///src/app/comps/history/history.component.ts","webpack:///src/app/comps/history/history.component.html","webpack:///src/app/comps/myservices/services.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","CalculatorComponent","srvHistory","myInput","inputNumber","sumNum","result","val","console","log","eval","toString","arrHistory","push","key","myE1","myCorrect","nativeElement","pattern","onkeypress","ev","match","onkey","onOperatorClick","onEqual","HistoryComponent","ServicesService","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'calculator';\n}\n","<app-calculator></app-calculator>\n<app-history></app-history>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CalculatorComponent } from './comps/calculator/calculator.component';\nimport { HistoryComponent } from './comps/history/history.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CalculatorComponent,\n    HistoryComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ServicesService } from '../myservices/services.service';\n\n@Component({\n  selector: 'app-calculator',\n  templateUrl: './calculator.component.html',\n  styleUrls: ['./calculator.component.css']\n})\n\nexport class CalculatorComponent implements OnInit {\n\n  @ViewChild('myInput') myCorrect: ElementRef\n\n  myInput: string = '';\n  inputNumber: string = '';\n  sumNum: number = 0;\n  result: string = '';\n\n  onOperatorClick(val) {\n    console.log(val);\n    this.inputNumber += val;\n    this.result = this.inputNumber;\n\n\n  }\n  onEqual(val) {\n    console.log(this.inputNumber);\n\n    this.sumNum = eval(this.inputNumber);\n\n    this.result += `=${this.sumNum.toString()}`\n    this.inputNumber = this.sumNum.toString()\n\n    this.srvHistory.arrHistory.push(this.result)\n  }\n  onkey(key: any) {\n    console.log(key);\n    let myE1 = this.myCorrect.nativeElement;\n    let pattern = /^(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[-+/*%]|$))+$/g;\n    myE1.onkeypress = ev => {\n      if (!ev.key.match(pattern)) {\n        return false;\n      }\n    }\n    this.inputNumber = key;\n    this.result = this.inputNumber;\n  }\n\n\n  constructor(public srvHistory: ServicesService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n  <h1>My Calculator</h1>\n  <input #myInput [value]='inputNumber' (keyup)='onkey(myInput.value)'  class=\"result\" type=\"text\">\n  <button (click)='onOperatorClick(\"+\")' id=\"plus\">+</button>\n  <button (click)='onOperatorClick(\"-\")' id=\"minus\">-</button>\n  <button (click)='onOperatorClick(\"*\")' id=\"multy\">*</button>\n  <button (click)='onOperatorClick(\"/\")' id=\"devide\">/</button>\n  <button (click)='onEqual(myInput.value)' id=\"eqaul\">=</button>\n  <p>{{result}}</p>\n</header>\n","import { Component, OnInit } from '@angular/core';\nimport { ServicesService } from '../myservices/services.service';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.css']\n})\nexport class HistoryComponent implements OnInit {\n\n  constructor(public srvHistory: ServicesService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>History Archive</h1>\n<div class=\"wrap\">\n  <ul>\n    <li *ngFor=\"let result of srvHistory.arrHistory\">{{ result }}</li>\n  </ul>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicesService {\n\n  constructor() { }\n  arrHistory: string[] = []\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}